{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HrusikeshSwain\\\\OneDrive - SAFEGUARD WORLD INTERNATIONAL LLC\\\\Desktop\\\\React\\\\Nextjs\\\\06-onwards-to-a-bigger-project-starting-project\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { React, Fragment } from \"react\";\nimport classes from \"../../components/meetups/MeetupDetail.module.css\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\n\nfunction meetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupDetails.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupDetails.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.detail,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.meetupDetails.image,\n        alt: props.meetupDetails.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.meetupDetails.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"address\", {\n        children: props.meetupDetails.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.meetupDetails.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n} //fallback false - paths contain all supported values like if enter m2 get 404 and pregenerate pages like which are vsisted nore frequently\n\n\nexport async function getStaticPaths() {\n  let result;\n\n  try {\n    const client = await MongoClient.connect(\"mongodb+srv://hrusikesh:89MZ5N3uL4YZJiGg@cluster0.x0hfv.mongodb.net/meetups?retryWrites=true&w=majority\");\n    const db = client.db();\n    const meetupcollections = db.collection(\"meetups\");\n    result = await meetupcollections.find({}, {\n      _id: 1\n    }).toArray();\n    client.close();\n  } catch (error) {}\n\n  return {\n    fallback: false,\n    paths: result.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  let selectedMeetup;\n\n  try {\n    const meetId = context.params.meetupId;\n    const client = await MongoClient.connect(\"mongodb+srv://hrusikesh:89MZ5N3uL4YZJiGg@cluster0.x0hfv.mongodb.net/meetups?retryWrites=true&w=majority\");\n    const db = client.db();\n    const meetupcollections = db.collection(\"meetups\");\n    selectedMeetup = await meetupcollections.findOne({\n      _id: ObjectId(meetId)\n    });\n  } catch (error) {}\n\n  return {\n    props: {\n      meetupDetails: {\n        image: selectedMeetup.image,\n        id: selectedMeetup._id.toString(),\n        address: selectedMeetup.address,\n        title: selectedMeetup.title\n      }\n    }\n  };\n}\nexport default meetupDetails;","map":{"version":3,"sources":["C:/Users/HrusikeshSwain/OneDrive - SAFEGUARD WORLD INTERNATIONAL LLC/Desktop/React/Nextjs/06-onwards-to-a-bigger-project-starting-project/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["React","Fragment","classes","MongoClient","ObjectId","Head","meetupDetails","props","title","description","detail","image","address","getStaticPaths","result","client","connect","db","meetupcollections","collection","find","_id","toArray","close","error","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","meetId","findOne","id"],"mappings":"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","sourcesContent":["import { React, Fragment } from \"react\";\r\nimport classes from \"../../components/meetups/MeetupDetail.module.css\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport Head from \"next/head\";\r\n\r\nfunction meetupDetails(props) {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{props.meetupDetails.title}</title>\r\n        <meta name=\"description\" content={props.meetupDetails.description}/>\r\n      </Head>\r\n      <section className={classes.detail}>\r\n        <img src={props.meetupDetails.image} alt={props.meetupDetails.title} />\r\n        <h1>{props.meetupDetails.title}</h1>\r\n        <address>{props.meetupDetails.address}</address>\r\n        <p>{props.meetupDetails.title}</p>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n//fallback false - paths contain all supported values like if enter m2 get 404 and pregenerate pages like which are vsisted nore frequently\r\n\r\nexport async function getStaticPaths() {\r\n  let result;\r\n  try {\r\n    const client = await MongoClient.connect(\r\n        \"mongodb+srv://hrusikesh:89MZ5N3uL4YZJiGg@cluster0.x0hfv.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n      );\r\n      const db = client.db();\r\n      const meetupcollections = db.collection(\"meetups\");\r\n      result = await meetupcollections.find({}, { _id: 1 }).toArray();\r\n      client.close();\r\n  } catch (error) {\r\n    \r\n  }  \r\n  \r\n  return {\r\n    fallback: false,\r\n    paths: result.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    let selectedMeetup;\r\n  try {\r\n    const meetId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://hrusikesh:89MZ5N3uL4YZJiGg@cluster0.x0hfv.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupcollections = db.collection(\"meetups\");\r\n  selectedMeetup = await meetupcollections.findOne({\r\n    _id: ObjectId(meetId),\r\n  });\r\n  } catch (error) {\r\n    \r\n  }  \r\n  \r\n  return {\r\n    props: {\r\n      meetupDetails: {\r\n        image: selectedMeetup.image,\r\n        id: selectedMeetup._id.toString(),\r\n        address: selectedMeetup.address,\r\n        title: selectedMeetup.title,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default meetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}